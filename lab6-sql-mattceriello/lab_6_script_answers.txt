Name: Matt Ceriello

###Answer Scripts


##SECTION 3

#3.1 :Write an SQL Script to create a new table to hold information on the competing universities. The table should hold the following information:

  University Name (Text) (Note: University Name should be unique and set as PRIMARY KEY)
  Date Established (Date)
  Address (Address)
  Student Population (Int)
  Acceptance Rate (Decimal)

>> (Your Answer here)
CREATE TABLE University(
  UniversityName VARCHAR(200) PRIMARY KEY,
  DateEstablished DATE,
  Address VARCHAR(200),
  StudentPopulation INT,
  AcceptanceRate DECIMAL
);



#3.2 Write an insert statement to add the University Information The table should hold the following information:

       University Name :- CU Boulder
       Date Established :- 1876
       Address :- 1100 28th St, Boulder, CO 80303
       Student Population :- 35,000
       Acceptance Rate :- 80%

>> (Your Answer here)
INSERT INTO University
  VALUES('CU Boulder', '1876-04-01', '1100 28th St, Boulder, CO 80303', 35000, 80);



##SECTION 4

#4.1 Write a script to list the Football Players (name & major), organized by major in college.

>>
SELECT name, major from football_players ORDER BY major;

#4.2 Write a script to list all of the Football Players (name & rushing yards) who have 70 or more rushing yards.

>>
SELECT name, rushing_yards from football_players WHERE rushing_yards >= 70;

#4.3 Write a script to list all of the games played against Nebraska (show all game information).

>>
SELECT * from football_games WHERE visitor_name = 'Nebraska';

#4.4 Write a script to list all of the games CU Boulder has won.

>>
SELECT * from football_games WHERE home_score > visitor_score;

#4.5 Write a script to list all of the games played in the Fall 2020 Season (show team name & game date).

>>
Select visitor_name, game_date from football_games where EXTRACT(month from game_date) > 8;


#4.6 Write a script to list the average number of points CU has scored in past games.

>>
SELECT avg(home_score) from football_games;

#4.7 Write a script to list the majors of the Football players and calculate how many of them are in each of the majors listed. Rename the column where you calculate the majors to number_of_players.

>>
SELECT major, count(major) as number_of_players from football_players group by major;

#4.8 Write a script to modify the above query in 5.6 to include only the Football players who are majoring in Computer Science.

>>
SELECT major, count(major) as number_of_players from football_players WHERE major = 'CSCI' group by major;


##SECTION 5

#5.1 Write a script to create a view that counts the total number of winning games.

>>
CREATE view games_won as
  SELECT count(home_score > visitor_score) as won from football_games WHERE home_score > visitor_score;

#5.2 Write a script to create a view that counts the total number of games played.

>>
CREATE view games_played as
  SELECT count(visitor_name) as play from football_games;

#5.3 Write a script that uses the two views you created (from 6.1 and 6.2) to calculate the percent of wins.

>>
CREATE view win_percentage as
  SELECT (
    (SELECT won FROM games_won) * 100 / (SELECT SUM(play) FROM games_played)
    ) as win_pcnt;

##SECTION 6

#6.1 Write a script that will count how many games "Cedric Vega" has played in during his entire football career.

>>
CREATE view Vega_GP as
  SELECT count(*) FROM football_games WHERE (select id from football_players where name = 'Cedric Vega')= ANY(players);

#6.2 Write a script that will calculate the average number of rushing yards for "Cedric Vega", based on the number of games he has played.

>>
CREATE view avgrushyds as
SELECT
  (SELECT rushing_yards FROM football_players WHERE name = 'Cedric Vega') * 1.0 /
    (SELECT COUNT(*) FROM football_games WHERE
      (SELECT id FROM football_players WHERE name = 'Cedric Vega') = ANY(players)
    ) as avg_rush_yds;
